CMP = mpicxx
LNK = mpicxx
# Use the two lines below to compile the not_parallel tools.
# CMP = g++
# LNK = g++

#-DNO_WRITE_AT_ALL:  Define to disable write at all to 
#                    avoid memleak (much slower IO)
#-DMPICH_IGNORE_CXX_SEEK: Ignores some multiple definition 
#                         errors that come up when using 
#                         mpi.h in c++ on Cray

CXXFLAGS = -DMPICH_IGNORE_CXX_SEEK

FLAGS = 

# NOTES on compiler flags:
# CXXFLAGS is for compiler flags, they are always used
# MATHFLAGS are for special math etc. flags, these are only applied on solver functions
# LDFLAGS flags for linker

#GNU flags:
CC_BRAND = gcc
CC_BRAND_VERSION = 4.4.6
CXXFLAGS += -O3 -fopenmp -funroll-loops -std=c++0x -W -Wall -pedantic
# CXXFLAGS += -O0 -W -Wall -pedantic
# CXXFLAGS +=  -O3 -funroll-loops -std=c++0x -W -Wall -pedantic -Wno-unused
# CXXFLAGS += -g -std=c++0x -W -Wall -pedantic -Wno-unused
# DCXXFLAGS +=  -g  -fopenmp -std=c++0x -W -Wall -pedantic -Wno-unused
MATHFLAGS = -ffast-math
LDFLAGS =
LIB_MPI = -lgomp

BOOST_VERSION = 1.50.0
ZOLTAN_VERSION = 3.6
SILO_VERSION = 4.8
GCC_VERSION = 4.4.6

LIBRARY_PREFIX = /gpfs/scratch/userexternal/ykempf00/code/libs

INC_BOOST = -I$(LIBRARY_PREFIX)/boost/$(BOOST_VERSION)/gcc/$(GCC_VERSION)/include
LIB_BOOST = -L$(LIBRARY_PREFIX)/boost/$(BOOST_VERSION)/gcc/$(GCC_VERSION)/lib -lboost_program_options

INC_ZOLTAN = -I$(LIBRARY_PREFIX)/zoltan/$(ZOLTAN_VERSION)/gcc/$(GCC_VERSION)/include
LIB_ZOLTAN = -L$(LIBRARY_PREFIX)/zoltan/$(ZOLTAN_VERSION)/gcc/$(GCC_VERSION)/lib -lzoltan

INC_SILO = -I$(LIBRARY_PREFIX)/silo/$(SILO_VERSION)/gcc/$(GCC_VERSION)/include
LIB_SILO = -L$(LIBRARY_PREFIX)/silo/$(SILO_VERSION)/gcc/$(GCC_VERSION)/lib -lsilo


#DCCRG version with reduced neighbourhood. Might not be up-to-date
#INC_DCCRG = -I$(LIBRARY_PREFIX_B)/dccrg-new

#Official dccrg installation
INC_DCCRG = -I$(LIBRARY_PREFIX)/dccrg/


LIB_PROFILE = -L$(LIBRARY_PREFIX)/phiprof/gcc/$(GCC_VERSION)/lib -lphiprof
INC_PROFILE = -I$(LIBRARY_PREFIX)/phiprof/gcc/$(GCC_VERSION)/include

INC_VECTORCLASS = -I$(LIBRARY_PREFIX)/vectorclass




